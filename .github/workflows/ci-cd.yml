name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ci-cd-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest

      - name: Lint
        run: flake8 src/

      - name: Test
        run: pytest -q

  build-and-push:
    needs: lint-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build + push TRAIN image
      - name: Build & push train image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.train
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/mlops-project-train:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/mlops-project-train:sha-${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/mlops-project-train:latest
          cache-to: type=inline

      # Build + push API image
      - name: Build & push api image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.api
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/mlops-project-api:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/mlops-project-api:sha-${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/mlops-project-api:latest
          cache-to: type=inline

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Copy docker-compose and monitoring to EC2
      - name: Upload compose + monitoring to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          source: "docker-compose.yml,deploy.sh,monitoring/**"
          target: "/home/ubuntu/mlops-app"
          strip_components: 0

      # Deploy (pull latest images + up)
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script_stop: true
          script: |
            set -euo pipefail
            cd /home/ubuntu/mlops-app

            # Log into Docker Hub (non-interactive)
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

            # Pull latest images referenced by docker-compose.yml
            docker compose pull

            # Start/refresh the stack
            docker compose up -d --remove-orphans

            # (Optional) Clean old images
            docker image prune -f

            # Show running services
            docker compose ps
